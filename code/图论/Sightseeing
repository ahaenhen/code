#include<cstring>
#include<cstdio>
#include<iostream>
#include <vector>
#include <queue>
#define inf 0x3f3f3f3f
using namespace std;
const int maxn=5003;
int dis[maxn][2],cnt[maxn][2],n,r,a,b,d,s,e;
bool flag[maxn][2];
struct node{
    int v,c;
};
vector<node>m[maxn];
void dj(){
    for(int i=1;i<=n;i++){
        dis[i][0]=dis[i][1]=inf;
        flag[i][0]=flag[i][1]=false;
        cnt[i][0]=cnt[i][1]=0;
    }
    dis[s][0]=0,cnt[s][0]=1;
    while(1){
        //cout<<"isi"<<endl;
        int minn=inf,mark,f;
        for(int i=1;i<=n;i++){
            if(!flag[i][0]&&dis[i][0]<minn)
                minn=dis[i][0],f=0,mark=i;
            else if(!flag[i][1]&&dis[i][1]<minn)
                 minn=dis[i][1],f=1,mark=i;
        }
        if(minn==inf)break;
        flag[mark][f]=true;
        for(int i=0;i<m[mark].size();i++){
            int t=m[mark][i].v,d=minn+m[mark][i].c;
            if(dis[t][0]>d){
                dis[t][1] = dis[t][0];
                cnt[t][1] = cnt[t][0];
                dis[t][0] = d;
                cnt[t][0] = cnt[mark][f];
            }
            else if(dis[t][0]==d){
                cnt[t][0]+=cnt[mark][f];
            }
            else if(dis[t][1]>d){
                dis[t][1] = d;
                cnt[t][1] = cnt[mark][f];
            }
            else if(dis[t][1]==d){
                cnt[t][1]+=cnt[mark][f];
            }
        }
    }
}
int main(){
    int t;
    cin>>t;
    while(t--){
        cin>>n>>r;
        for(int i=0;i<=n;i++)m[i].clear();
        for(int i=1;i<=r;i++){
            scanf("%d%d%d",&a,&b,&d);
            m[a].push_back(node{b,d});
            //m[b].push_back(node{a,d});
        }
        scanf("%d%d",&s,&e);
        dj();
        if(dis[e][0]+1==dis[e][1])cnt[e][0]+=cnt[e][1];
            printf("%d\n",cnt[e][0]);
    }
}
