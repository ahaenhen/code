#include<cstdio>
#include<vector>
#include<queue>
#include<iostream>
using namespace std;
const int maxn=1003;
int n,m,u,v,w;
double dis[maxn];//注意是double
int cnt[maxn],val[maxn];
bool vis[maxn],flag[maxn];
struct node{
    int to,cost;
};
vector<node>G[maxn];
bool spfa(double mid){
    for(int i=1;i<=n;i++){
        vis[i]=cnt[i]=flag[i]=0;
        dis[i]=0;
    }
    queue<int>qu;
    for(int s=1;s<=n;s++){
        if(flag[s])continue;
        dis[s]=0;
        //queue<int>qu;
        qu.push(s);
        vis[s]=1;
        while(!qu.empty()){
            int U=qu.front();
            qu.pop();
            vis[U]=0;
            flag[U]=1;
            for(int i=0;i<G[U].size();i++){
                node V=G[U][i];
                double tmp=mid*V.cost-val[V.to];
                if(dis[V.to]<dis[U]-tmp){
                    dis[V.to]=dis[U]-tmp;
                    if(!vis[V.to]){
                        if(++cnt[V.to]>=n)return 1;
                        vis[V.to]=1;
                        qu.push(V.to);
                    }
                }
            }
        }
    }
    return 0;
}
int main(){
    while(cin>>n>>m){
    for(int i=1;i<=n;i++)G[i].clear();
    for(int i=1;i<=n;i++)scanf("%d",&val[i]);
    for(int i=1;i<=m;i++){
        scanf("%d%d%d",&u,&v,&w);
        G[u].push_back(node{v,w});
    }
    double l=0,mid,esp=0.001,r=1000;
    while(r-l>esp){
        if(spfa(mid))l=mid;
        else r=mid;
        mid=(l+r)/2.0;
    }
    if(l>esp)printf("%.2f\n",l);
    else printf("0\n");
    }
    return 0;
}
