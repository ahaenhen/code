#include<bits/stdc++.h>
using namespace std;
struct node{
    int id,l,r;
}tree[35];
int in[50],pre[50];
int  solve(int s1,int e1,int s2,int e2){
    if(s1>e1||s2>e2)return -1;
    int i=s1;
    tree[s2].id=pre[s2];
    while(in[i]!=pre[s2])i++;
    //cout<<tree[s2].id<<endl;
    tree[s2].l=solve(s1,i-1,s2+1,s2+i);
    tree[s2].r=solve(i+1,e1,s2+i-s1+1,e2);
    return s2;
}
void print()
{
    queue<int>q;
    q.push(0);
    int flag=0;
    while(!q.empty())
    {
        int now = q.front();
        q.pop();
        if(!flag)
            printf("%d",tree[now].id);
        else
            printf(" %d",tree[now].id);
        flag=1;
        if(tree[now].r!=-1)
            q.push(tree[now].r);
        if(tree[now].l!=-1)
            q.push(tree[now].l);
    }
}
int main(){
    int n;
    cin>>n;
    for(int i=0;i<n;i++)cin>>in[i];
    for(int i=0;i<n;i++)cin>>pre[i];
    solve(0,n-1,0,n-1);
    print();
    return 0;
}
